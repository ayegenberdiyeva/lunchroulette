//
//  enums.swift
//  Lunch Roulette
//
//  Created by Amina Yegenberdiyeva on 26.04.2025.
//

import Foundation

enum Cuisine: String, Codable, CaseIterable, Identifiable {
    case national = "–ù–∞—Ü–∏–æ–Ω–∞–ª—å–Ω–∞—è"
    case korean = "–ö–æ—Ä–µ–π—Å–∫–∞—è"
    case japanese = "–Ø–ø–æ–Ω—Å–∫–∞—è"
    case chinese = "–ö–∏—Ç–∞–π—Å–∫–∞—è"
    case italian = "–ò—Ç–∞–ª—å—è–Ω—Å–∫–∞—è"
    case french = "–§—Ä–∞–Ω—Ü—É–∑—Å–∫–∞—è"
    case turkish = "–¢—É—Ä–µ—Ü–∫–∞—è"
    
    var id : Self { self }
    
    var string: String {
        switch self {
            case .national:
                return "National"
            case .korean:
                return "Korean"
            case .japanese:
                return "Japanese"
            case.chinese:
                return "Chinese"
            case .italian:
                return "Italian"
            case .french:
                return "French"
            case .turkish:
                return "Turkish"
        }
    }
    
    var emoji: String {
        switch self {
            case .national:
                return "üç≤"
            case .korean:
                return "üçö"
            case .japanese:
                return "üç£"
            case .chinese:
                return "ü•°"
            case .italian:
                return "üçù"
            case .french:
                return "ü•ñ"
            case .turkish:
                return "ü•ô"
        }
    }
}

enum PriceRange: String, CaseIterable, Identifiable {
    case low = "–ú–µ–Ω–µ–µ 5.000"
    case medium = "5.000 - 12.000"
    case high = "12.000 - 25.000"
    case luxury = "25.000 –∏ –±–æ–ª–µ–µ"
    
    var id: Self { self }
    
    var range: ClosedRange<Double> {
        switch self {
        case .low:
            return 0...5000
        case .medium:
            return 5000...12000
        case .high:
            return 12000...25000
        case .luxury:
            return 25000...Double.infinity
        }
    }
}

enum ScourceView {
    case history
    case random
}
